// P[0, 1] + P[0, 2] + P[0, 3] + P[0, 4] + P[0, 6] + P[0, 7] + U4[1, 0] + U4[1, 4] + U4[2, 0] + U4[2, 4] + U4[3, 0] + U4[3, 4] + U4[5, 0] + U4[5, 4] + U4[7, 0] + U4[7, 4]
#include <iostream>
using namespace std;

int cnt[256][256];
int sbox_inv[256] = {143, 15, 224, 141, 216, 191, 213, 98, 182, 91, 198, 113, 156, 43, 115, 68, 127, 134, 94, 38, 4, 186, 107, 220, 23, 160, 237, 207, 211, 149, 77, 250, 151, 210, 222, 79, 22, 214, 35, 25, 42, 6, 223, 230, 132, 65, 235, 117, 209, 53, 24, 169, 28, 171, 69, 99, 102, 184, 239, 215, 130, 32, 0, 100, 155, 44, 7, 165, 174, 59, 176, 118, 193, 76, 123, 12, 125, 63, 231, 80, 37, 88, 74, 122, 97, 95, 49, 200, 60, 144, 108, 219, 197, 187, 89, 17, 131, 52, 236, 120, 51, 18, 217, 110, 67, 13, 183, 136, 180, 39, 255, 179, 61, 181, 218, 240, 8, 1, 103, 163, 27, 172, 116, 212, 46, 153, 129, 246, 192, 243, 175, 146, 105, 66, 154, 248, 106, 81, 137, 62, 34, 226, 188, 11, 126, 201, 167, 166, 75, 247, 36, 147, 10, 251, 55, 128, 253, 82, 16, 138, 72, 111, 92, 85, 158, 90, 21, 190, 254, 73, 145, 101, 203, 124, 164, 19, 56, 70, 9, 3, 83, 228, 30, 139, 64, 31, 47, 152, 202, 194, 26, 20, 195, 196, 241, 2, 225, 54, 142, 57, 242, 119, 157, 177, 199, 112, 168, 206, 227, 221, 5, 178, 238, 232, 48, 135, 233, 96, 208, 148, 121, 109, 162, 161, 204, 33, 205, 244, 249, 78, 150, 87, 234, 93, 133, 50, 45, 104, 189, 173, 185, 86, 29, 170, 71, 229, 40, 159, 84, 245, 252, 140, 41, 58, 14, 114};

inline int bit(int n, int k)
{
    return (n & (1 << k)) != 0;
}
int main()
{
    auto f = fopen("data", "rb");
    for (int i = 0; i < 65536; i++) {
        uint8_t p[8], c[8];
        fread(&p, 8, 1, f);
        fread(&c, 8, 1, f);
        for (int a = 0; a < 256; a++) {
            for (int b = 0; b < 256; b++) {
                int u4b1 = sbox_inv[(int)c[1] ^ a];
                int u4b2 = sbox_inv[(int)c[2] ^ b];
                int u4b3 = sbox_inv[(int)c[3] ^ 65];
                int u4b5 = sbox_inv[(int)c[5] ^ 239];
                int u4b7 = sbox_inv[(int)c[7] ^ 40];
                if ( bit(p[0], 1) ^ bit(p[0], 2) ^ bit(p[0], 3) ^ bit(p[0], 4) ^ bit(p[0], 6) ^ bit(p[0], 7) \
                ^ bit(u4b1,0) ^ bit(u4b1,4) \
                ^ bit(u4b2,0) ^ bit(u4b2,4) \
                ^ bit(u4b3,0) ^ bit(u4b3,4) \
                ^ bit(u4b5,0) ^ bit(u4b5,4) \
                ^ bit(u4b7,0) ^ bit(u4b7,4) ){
                    cnt[a][b]++;
                }
            }
        }
        if(i % 1000 == 0)cout << i << endl;
    }
    for (int a = 0; a < 256; a++) {
        for (int b = 0; b < 256; b++) {
            int bias = abs(cnt[a][b] - 32768);
            if (bias > 1000)
                cout << a << " " << b << " " << bias << endl;
        }
    }
}

// 167 150 1913 MAX
// 176 150 1076